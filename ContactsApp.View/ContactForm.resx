<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAADcAAACRAAAApgAAAKUAAAClAAAApQAAAKUAAAClAAAApQAA
        AKUAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAAClAAAApQAAAKUAAAClAAAApgAAAJ4AAABbAAAABQAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAB3AAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAA
        AP8AAAC6AAAACQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAOQAAAP8AAAD+AAAA+wAAAOsAAADqAAAA6gAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6gAA
        AOkAAAD2AAAA+wAAAP8AAACIAAAAAAAAAAMAAAAAAAAAAAAAAAAAAACMAAAA/wAAAP8AAABlAAAACAAA
        ABMAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAATAAAADQAAAC0AAADjAAAA/wAAANkAAAAEAAAAAAAAAAEAAAAAAAAAAAAAAKMAAAD/AAAA6wAA
        ABMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKoAAAD/AAAA6AAAABEAAAAAAAAAAQAAAAAAAAAAAAAApQAA
        AP8AAADqAAAAFAAAAAAAAAACAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAQAAAAAAAAAqQAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAClAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAAIAAAAEAAAABAAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAACoAAAA/wAAAOoAAAARAAAAAAAA
        AAEAAAAAAAAAAAAAAKUAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAABAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAKgAAAD/AAAA6gAA
        ABEAAAAAAAAAAQAAAAAAAAAAAAAApQAAAP8AAADqAAAAEQAAAAAAAAABAAAAAgAAAAAAAAAmAAAApAAA
        AIIAAABBAAAAEQAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAqAAA
        AP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAClAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAEAAAAAAAA
        AJ4AAAD/AAAA+wAAAP8AAADrAAAAuwAAAIIAAAA2AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACoAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAAAAAKUAAAD/AAAA6gAAABEAAAAAAAAAAQAA
        AAQAAAAAAAAAgQAAAP8AAAD3AAAA/QAAAP8AAAD/AAAA/gAAAP8AAABnAAAAAAAAAAUAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAKgAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAApQAAAP8AAADqAAAAEQAA
        AAAAAAABAAAAAwAAAAAAAABCAAAA/wAAAP8AAADMAAAAsQAAAO4AAAD/AAAA/AAAAP8AAABoAAAAAAAA
        AAUAAAAAAAAAAAAAAAMAAAAAAAAAqAAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAClAAAA/wAA
        AOoAAAARAAAAAAAAAAEAAAABAAAAAAAAABMAAADpAAAA/wAAALYAAAAAAAAACwAAAHEAAAD/AAAA+wAA
        AP8AAABoAAAAAAAAAAUAAAAAAAAAAwAAAAAAAACnAAAA/wAAAOgAAAARAAAAAAAAAAEAAAAAAAAAAAAA
        AKUAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAACAAAAAAAAALoAAAD/AAAA6gAAABMAAAAAAAAAAAAA
        AGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAUAAAAEAAAAAAAAAKYAAAD/AAAA6QAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAApQAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAgAAAAP8AAAD/AAAAcAAA
        AAAAAAAKAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAcAAAAAAAAAUwAAAPoAAACZAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAClAAAA/wAAAOoAAAARAAAAAAAAAAEAAAAAAAAAAwAAAAAAAAA4AAAA/wAA
        APwAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAUAAAAAAAAACwAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKUAAAD/AAAA6gAAABEAAAAAAAAAAQAAAAAAAAAAAAAAAgAA
        AAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABoAAAAAAAA
        AAYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApQAAAP8AAADqAAAAEQAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAA
        AP8AAABoAAAAAAAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAAAA/wAAAOoAAAARAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAA
        AGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKUAAAD/AAAA6gAA
        ABEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABnAAAA/wAAAPoAAAD/AAAAaAAA
        AAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAApQAA
        AP8AAADqAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABnAAAA/wAA
        APoAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABoAAAAAAAAAAUAAAAAAAAAAAAA
        AAAAAAClAAAA/wAAAOoAAAATAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        AAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAAAP8AAABnAAAAAAAA
        AAMAAAAAAAAAAAAAAKUAAAD/AAAA6gAAABIAAAAAAAAABQAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAAEAAAABwAAAAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAAAGcAAAD/AAAA+gAA
        AP8AAABnAAAAAAAAAAMAAAAAAAAAmgAAAP8AAAD5AAAAMAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABnAAAA/wAAAPoAAAD/AAAAaAAAAAAAAAAJAAAAAAAA
        AGcAAAD/AAAA/QAAAP8AAAA6AAAAAAAAAAAAAABbAAAA/wAAAP0AAADgAAAApgAAAKkAAACoAAAAqAAA
        AKgAAACoAAAAqAAAAKgAAACnAAAArwAAAFMAAAAAAAAABgAAAAAAAABnAAAA/wAAAPoAAAD/AAAAZwAA
        AAAAAAAJAAAAAAAAAGwAAAD/AAAA/wAAAKAAAAAAAAAAAAAAAAEAAAC5AAAA/wAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA5QAAAAsAAAAAAAAABQAAAAAAAABnAAAA/wAA
        APoAAAD/AAAAaAAAAAAAAAADAAAAAgAAANYAAAD/AAAAwwAAAAAAAAABAAAAAAAAAAsAAACIAAAA3wAA
        AOoAAADqAAAA6gAAAOoAAADqAAAA6gAAAOoAAADqAAAA6AAAAPMAAACZAAAAAAAAAAEAAAABAAAABQAA
        AAAAAABnAAAA/wAAAPoAAAD/AAAAbAAAAAAAAAA6AAAA9AAAAP8AAACzAAAAAAAAAAAAAAABAAAAAgAA
        AAAAAAAGAAAAEgAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAASAAAAEAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAAAAAAABnAAAA/wAAAP0AAAD8AAAA1AAAAO8AAAD9AAAA/wAAAGEAAAAAAAAAAAAA
        AAAAAAABAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAABmAAAA/wAAAP8AAAD+AAAA/QAAAP8AAACoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA4AAAApQAAAMgAAAC5AAAAYAAA
        AAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAEAAAAAi///S6AAAAVAAAAJgAAACYAAAAWF//yFhAAAhYSBfIWFJEyFhIIUhYSA
        SIWEgCSFhIAQhYSECIWEQwSFhEKCiYRBQUuFIKCFhVBQS4VIKCWFpBQShdIKCYQBBQWEAIKChfpBQYAA
        oKGAAFBBQACIIZAApAFF+lICoACpAP//9Ek=
</value>
  </data>
</root>